#
# Authenication properties for j2eeLogin.
# Modified JTH 11/16/2012 to change location of validateid url
# Modified JTH 12/03/2015 to replace dsbx18.ext.ti.com with ti-pass-stg.ext.ti.com
#                            as part of ti-pass migration to x86 we have replace
#                            direct reference to sparc Stage server(dsbx18) with appropriate VIP name.
#

# Set to true if you want the TIPassLoginFilter to do more logging
debug=false

# If you want to exclude certain browser agent types, that might be used by 
# program interfaces, then you can use the userAgentException list to exclude 
# one or more agent names available via the request.getHeader("User-Agent") call. 
# The property value 'userAgentException' can be used to specify the list of agent
# names prefixes. The filter will compare each comma separated value using the startsWith 
# compare against the returned User-Agent value. Example:
# userAgentException=agent-prefix1,agent-prfix2,...  
#
# 2 additional authentication paramaeters are supported.  If neither is specified then
# all paths that match the url-pattern parameter in the web.xml file are processed
# as requiring authentication.
#
# If desired you can define authentication.include|exclude=<pattern1>[\t]<pattern2> ...
#
# Where multiple patterns are separated by an tab character (\t)
# The pattern can contain 0 or more wildcard characters, '*'
#
# If the secure list is specified and the url doesn't match any of the include patterns,
# then the url is not authenticated.
#
# If the exclude list is specified and the url matches any of the patterns, then the url
# is not authenticated.

# If both include and exclude list are included, then the include lists are processed
# first and if a match is found then the exclude list is processed, else the URL is
# not authenticated.
#
# For example if you have:
# authentication.include=*.jsp\t/secure/* then
# all jsp's will be authenticated, plus any url ending in the /secure/*.
# all other files will not be authenicated.
#
# if you have:
# authentication.exclude=htmldir/* then
# all urls will be protected except for any file that in the directory htmldir

# For j2eeLoginVerify let's explicitly specify what is included and what isn't
# just to demonstrate the property.  For simplicity I could have omitted the 
# include parameter, since the exclude by itself would force non-matched patterns
# to be included.
authentication.include=*.jsp\t*/secure/*

authentication.exclude=*/unsecure/*

#
# I could have written my own regex as:
# authentication.exclude=regex:\.*/unsecure/


# Use next property if you want a simplier login screen for Production (DEFAULT)
authentication.j2eeLoginURL=https://myportal.ti.com/portal/dt?provider=TIPassLoginSingleContainer

# Use next property if you want a simple login screen for Stage
# authentication.j2eeLoginURL=https://tiportal-url1.itg.ti.com/portal/dt?provider=TIPassLoginSingleContainer

# Use this property to get the multiframe login screen for Production
#authentication.j2eeLoginURL=https://myportal.ti.com/portal/dt?provider=TIPassLoginSingleContainer&lt=myti

# Use next property if you want a simple login screen for Stage
# authentication.j2eeLoginURL=https://tiportal-url1.itg.ti.com/portal/dt?provider=TIPassLoginSingleContainer&lt=myti

# Use this property to specify the logout URL for production (DEFAULT)
authentication.j2eeLogoutURL=https://ti-pass.ext.ti.com/cgi-bin/login/logout.pl

# Use this property to specify the logout URL for Stage
#authentication.tipassLogoutURL=https://ti-pass-stg.ext.ti.com/cgi-bin/login/logout.pl

# Use this properties to specify the TIPass validation URL for Production
# Changed next to api servers to offload validation from main login servers JTH 11/16/2012 [DEFAULT]
authentication.validateTIPassidURL=https://ti-pass-api.ext.ti.com/cgi-bin/api/validateid 

# Use this properties to specify the TIPass validation URL for Stage
#authentication.validateTIPassidURL=https://ti-pass-stg.ext.ti.com/cgi-bin/api/getsapids


# Use this property to specify how long we will wait before requiring a new login.
#authentication.tipassExpireMinutes=480 [DEFAULT]
authentication.j2eeExpireMinutes=480
#
# The following is a list of all keys found in the TIPASSID cookie and can be
# accessed via the map request below.  They all have their origin in the ldap
# entry for the authenticated user.
#
# type
# role
# givenname
# sn
# cn
# securitylevel
# adminrights
# originalorganizationname
# relationship
#  o
#  wwacctnum
# modifytimestamp
# authtimestamp
# street
# street2
# city
# st
# postalcode
# c
# shippingstreet
# shippingstreet2
# shippingcity
# shippingst
# shippingpostalcode
# shippingc
# region
# telephonenumber
# facsimiletelephonenumber
# employeetype
# title
# createdate
# emailready
# emailvalidationdate
#
# You may map one or more of the above into header, session or request attributes as shown below.  Any
# attribute that is not availaible, i.e. empty, will map to an empty string.
#
# Create one or http header variable mappings here.  For example:
#   map 'uid' and 'givename' respectively into http header variables 'HTTP_UID' and 'HTTP_GIVENNAME'
#
map.header.HTTP_UID=uid
map.header.HTTP_GIVENNAME=givenname
#
# Create session variable mappings here, for example using the same variables above
#
map.session.HTTP_UID=uid
map.session.HTTP_GIVENNAME=givenname
#
# Create request variable mappings here, for example using the same variables above
map.request.HTTP_UID=uid
map.request.HTTP_GIVENNAME=givenname
